{"ast":null,"code":"var _jsxFileName = \"c:\\\\xampp\\\\htdocs\\\\solutionsurfacepos\\\\src\\\\components\\\\BooksList.jsx\";\nimport React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst BookForm = props => {\n  const [book, setBook] = useState({\n    bookname: props.book ? props.book.bookname : '',\n    author: props.book ? props.book.author : '',\n    quantity: props.book ? props.book.quantity : '',\n    price: props.book ? props.book.price : '',\n    date: props.book ? props.book.date : ''\n  });\n  const [errorMsg, setErrorMsg] = useState('');\n  const {\n    bookname,\n    author,\n    price,\n    quantity\n  } = book;\n\n  const handleOnSubmit = event => {\n    event.preventDefault();\n    const values = [bookname, author, price, quantity];\n    let errorMsg = '';\n    const allFieldsFilled = values.every(field => {\n      const value = `${field}`.trim();\n      return value !== '' && value !== '0';\n    });\n\n    if (allFieldsFilled) {\n      const book = {\n        id: uuidv4(),\n        bookname,\n        author,\n        price,\n        quantity,\n        date: new Date()\n      };\n      props.handleOnSubmit(book);\n    } else {\n      errorMsg = 'Please fill out all the fields.';\n    }\n\n    setErrorMsg(errorMsg);\n  };\n\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n\n    switch (name) {\n      case 'quantity':\n        if (value === '' || parseInt(value) === +value) {\n          setBook(prevState => ({ ...prevState,\n            [name]: value\n          }));\n        }\n\n        break;\n\n      case 'price':\n        if (value === '' || value.match(/^\\d{1,}(\\.\\d{0,2})?$/)) {\n          setBook(prevState => ({ ...prevState,\n            [name]: value\n          }));\n        }\n\n        break;\n\n      default:\n        setBook(prevState => ({ ...prevState,\n          [name]: value\n        }));\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"main-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, errorMsg && React.createElement(\"p\", {\n    className: \"errorMsg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, errorMsg), React.createElement(Form, {\n    onSubmit: handleOnSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    controlId: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Book Name\"), React.createElement(Form.Control, {\n    className: \"input-control\",\n    type: \"text\",\n    name: \"bookname\",\n    value: bookname,\n    placeholder: \"Enter name of book\",\n    onChange: handleInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    controlId: \"author\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Book Author\"), React.createElement(Form.Control, {\n    className: \"input-control\",\n    type: \"text\",\n    name: \"author\",\n    value: author,\n    placeholder: \"Enter name of author\",\n    onChange: handleInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    controlId: \"quantity\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Quantity\"), React.createElement(Form.Control, {\n    className: \"input-control\",\n    type: \"number\",\n    name: \"quantity\",\n    value: quantity,\n    placeholder: \"Enter available quantity\",\n    onChange: handleInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    controlId: \"price\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"Book Price\"), React.createElement(Form.Control, {\n    className: \"input-control\",\n    type: \"text\",\n    name: \"price\",\n    value: price,\n    placeholder: \"Enter price of book\",\n    onChange: handleInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  })), React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    className: \"submit-btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"Submit\")));\n};\n\nexport default BookForm;","map":{"version":3,"sources":["c:/xampp/htdocs/solutionsurfacepos/src/components/BooksList.jsx"],"names":["React","useState","Form","Button","v4","uuidv4","BookForm","props","book","setBook","bookname","author","quantity","price","date","errorMsg","setErrorMsg","handleOnSubmit","event","preventDefault","values","allFieldsFilled","every","field","value","trim","id","Date","handleInputChange","name","target","parseInt","prevState","match"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst BookForm = (props) => {\r\n  const [book, setBook] = useState({\r\n    bookname: props.book ? props.book.bookname : '',\r\n    author: props.book ? props.book.author : '',\r\n    quantity: props.book ? props.book.quantity : '',\r\n    price: props.book ? props.book.price : '',\r\n    date: props.book ? props.book.date : ''\r\n  });\r\n\r\n  const [errorMsg, setErrorMsg] = useState('');\r\n  const { bookname, author, price, quantity } = book;\r\n\r\n  const handleOnSubmit = (event) => {\r\n    event.preventDefault();\r\n    const values = [bookname, author, price, quantity];\r\n    let errorMsg = '';\r\n\r\n    const allFieldsFilled = values.every((field) => {\r\n      const value = `${field}`.trim();\r\n      return value !== '' && value !== '0';\r\n    });\r\n\r\n    if (allFieldsFilled) {\r\n      const book = {\r\n        id: uuidv4(),\r\n        bookname,\r\n        author,\r\n        price,\r\n        quantity,\r\n        date: new Date()\r\n      };\r\n      props.handleOnSubmit(book);\r\n    } else {\r\n      errorMsg = 'Please fill out all the fields.';\r\n    }\r\n    setErrorMsg(errorMsg);\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    switch (name) {\r\n      case 'quantity':\r\n        if (value === '' || parseInt(value) === +value) {\r\n          setBook((prevState) => ({\r\n            ...prevState,\r\n            [name]: value\r\n          }));\r\n        }\r\n        break;\r\n      case 'price':\r\n        if (value === '' || value.match(/^\\d{1,}(\\.\\d{0,2})?$/)) {\r\n          setBook((prevState) => ({\r\n            ...prevState,\r\n            [name]: value\r\n          }));\r\n        }\r\n        break;\r\n      default:\r\n        setBook((prevState) => ({\r\n          ...prevState,\r\n          [name]: value\r\n        }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-form\">\r\n      {errorMsg && <p className=\"errorMsg\">{errorMsg}</p>}\r\n      <Form onSubmit={handleOnSubmit}>\r\n        <Form.Group controlId=\"name\">\r\n          <Form.Label>Book Name</Form.Label>\r\n          <Form.Control\r\n            className=\"input-control\"\r\n            type=\"text\"\r\n            name=\"bookname\"\r\n            value={bookname}\r\n            placeholder=\"Enter name of book\"\r\n            onChange={handleInputChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"author\">\r\n          <Form.Label>Book Author</Form.Label>\r\n          <Form.Control\r\n            className=\"input-control\"\r\n            type=\"text\"\r\n            name=\"author\"\r\n            value={author}\r\n            placeholder=\"Enter name of author\"\r\n            onChange={handleInputChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"quantity\">\r\n          <Form.Label>Quantity</Form.Label>\r\n          <Form.Control\r\n            className=\"input-control\"\r\n            type=\"number\"\r\n            name=\"quantity\"\r\n            value={quantity}\r\n            placeholder=\"Enter available quantity\"\r\n            onChange={handleInputChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"price\">\r\n          <Form.Label>Book Price</Form.Label>\r\n          <Form.Control\r\n            className=\"input-control\"\r\n            type=\"text\"\r\n            name=\"price\"\r\n            value={price}\r\n            placeholder=\"Enter price of book\"\r\n            onChange={handleInputChange}\r\n          />\r\n        </Form.Group>\r\n        <Button variant=\"primary\" type=\"submit\" className=\"submit-btn\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookForm;"]},"metadata":{},"sourceType":"module"}