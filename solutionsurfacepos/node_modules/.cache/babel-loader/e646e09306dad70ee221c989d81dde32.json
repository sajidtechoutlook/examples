{"ast":null,"code":"var _jsxFileName = \"c:\\\\xampp\\\\htdocs\\\\solutionsurfacepos\\\\src\\\\components\\\\BooksList.jsx\";\nimport React from 'react';\nimport _ from 'lodash';\nimport Book from './Book';\n\nconst BooksList = ({\n  books,\n  setBooks\n}) => {\n  const handleRemoveBook = id => {\n    setBooks(books.filter(book => book.id !== id));\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"book-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"test\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }), \"test\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }), \"test\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), \"test\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), \"test\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), \"test\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), \"test\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), \"test\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), \"test\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), \"test\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), \"test\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), \"test\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), \"test\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), \"test\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), \"test\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), \"test\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), \"test\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), !_.isEmpty(books) ? books.map(book => React.createElement(Book, Object.assign({\n    key: book.id\n  }, book, {\n    handleRemoveBook: handleRemoveBook,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }))) : React.createElement(\"p\", {\n    className: \"message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"No books available. Please add some books.\")));\n};\n\nexport default BooksList;","map":{"version":3,"sources":["c:/xampp/htdocs/solutionsurfacepos/src/components/BooksList.jsx"],"names":["React","_","Book","BooksList","books","setBooks","handleRemoveBook","id","filter","book","isEmpty","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAyB;AAEzC,QAAMC,gBAAgB,GAAIC,EAAD,IAAQ;AAC/BF,IAAAA,QAAQ,CAACD,KAAK,CAACI,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACF,EAAL,KAAYA,EAAnC,CAAD,CAAR;AACD,GAFD;;AAIA,SACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,UAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,UAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,UAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,UAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,UAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,UAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,UAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,UASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,UAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,UAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,UAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,UAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbJ,UAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdJ,UAeI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfJ,UAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBJ,UAiBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBJ,EAmBG,CAACN,CAAC,CAACS,OAAF,CAAUN,KAAV,CAAD,GACCA,KAAK,CAACO,GAAN,CAAWF,IAAD,IACR,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,IAAI,CAACF;AAAhB,KAAwBE,IAAxB;AAA8B,IAAA,gBAAgB,EAAEH,gBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADD,GAKC;AAAG,IAAA,SAAS,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDAxBJ,CADF,CADF;AA+BD,CArCD;;AAuCA,eAAeH,SAAf","sourcesContent":["import React from 'react';\r\nimport _ from 'lodash';\r\nimport Book from './Book';\r\n\r\nconst BooksList = ({ books, setBooks }) => {\r\n\r\n  const handleRemoveBook = (id) => {\r\n    setBooks(books.filter((book) => book.id !== id));\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"book-list\">\r\n      test<br />\r\n      test<br />\r\n      test<br />\r\n      test<br />\r\n      test<br />\r\n      test<br />\r\n      test<br />\r\n      test<br />\r\n      test<br />\r\n      test<br />\r\n      test<br />\r\n      test<br />\r\n      test<br />\r\n      test<br />\r\n      test<br />\r\n      test<br />\r\n      test<br />\r\n\r\n        {!_.isEmpty(books) ? (\r\n          books.map((book) => (\r\n            <Book key={book.id} {...book} handleRemoveBook={handleRemoveBook} />\r\n          ))\r\n        ) : (\r\n          <p className=\"message\">No books available. Please add some books.</p>\r\n        )}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default BooksList;"]},"metadata":{},"sourceType":"module"}