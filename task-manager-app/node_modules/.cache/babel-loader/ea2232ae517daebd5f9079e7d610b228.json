{"ast":null,"code":"import _toConsumableArray from\"C:\\\\xampp\\\\htdocs\\\\examples\\\\task-manager-app\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\toConsumableArray.js\";import _objectSpread from\"C:\\\\xampp\\\\htdocs\\\\examples\\\\task-manager-app\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";import _slicedToArray from\"C:\\\\xampp\\\\htdocs\\\\examples\\\\task-manager-app\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";// Importing Components\nimport Header from'./components/Header';import Tasks from'./components/Tasks';import AddTask from'./components/AddTask';// Importing React Hooks\nimport{useState,useEffect}from'react';// Importing Packages\nimport{v4 as uuidv4}from'uuid';import Swal from\"sweetalert2\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function App(){// All States\nvar _useState=useState(true),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setloading=_useState2[1];// Pre-loader before page renders\nvar _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),tasks=_useState4[0],setTasks=_useState4[1];// Task State\nvar _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),showAddTask=_useState6[0],setShowAddTask=_useState6[1];// To reveal add task form\n// Pre-loader\nuseEffect(function(){setTimeout(function(){setloading(false);},1000);},[]);// Fetching from Local Storage\nvar getTasks=JSON.parse(localStorage.getItem(\"taskAdded\"));useEffect(function(){if(getTasks==null){setTasks([]);}else{setTasks(getTasks);}},[]);// Add Task\nvar addTask=function addTask(task){var id=uuidv4();var newTask=_objectSpread({id:id},task);setTasks([].concat(_toConsumableArray(tasks),[newTask]));Swal.fire({icon:'success',title:'Yay...',text:'You have successfully added a new task!'});localStorage.setItem(\"taskAdded\",JSON.stringify([].concat(_toConsumableArray(tasks),[newTask])));};// Delete Task\nvar deleteTask=function deleteTask(id){var deleteTask=tasks.filter(function(task){return task.id!==id;});setTasks(deleteTask);Swal.fire({icon:'success',title:'Oops...',text:'You have successfully deleted a task!'});localStorage.setItem(\"taskAdded\",JSON.stringify(deleteTask));};// Edit Task\nvar editTask=function editTask(id){var text=prompt(\"Task Name\");var day=prompt(\"Day and Time\");var data=JSON.parse(localStorage.getItem('taskAdded'));var myData=data.map(function(x){if(x.id===id){return _objectSpread(_objectSpread({},x),{},{text:text,day:day,id:uuidv4()});}return x;});Swal.fire({icon:'success',title:'Yay...',text:'You have successfully edited an existing task!'});localStorage.setItem(\"taskAdded\",JSON.stringify(myData));window.location.reload();};return/*#__PURE__*/_jsx(_Fragment,{children:loading?/*#__PURE__*/_jsxs(\"div\",{className:\"spinnerContainer\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"spinner-grow text-primary\",role:\"status\",children:/*#__PURE__*/_jsx(\"span\",{className:\"visually-hidden\",children:\"Loading...\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"spinner-grow text-secondary\",role:\"status\",children:/*#__PURE__*/_jsx(\"span\",{className:\"visually-hidden\",children:\"Loading...\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"spinner-grow text-success\",role:\"status\",children:/*#__PURE__*/_jsx(\"span\",{className:\"visually-hidden\",children:\"Loading...\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"spinner-grow text-danger\",role:\"status\",children:/*#__PURE__*/_jsx(\"span\",{className:\"visually-hidden\",children:\"Loading...\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"spinner-grow text-warning\",role:\"status\",children:/*#__PURE__*/_jsx(\"span\",{className:\"visually-hidden\",children:\"Loading...\"})})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(Header,{showForm:function showForm(){return setShowAddTask(!showAddTask);},changeTextAndColor:showAddTask}),showAddTask&&/*#__PURE__*/_jsx(AddTask,{onSave:addTask}),/*#__PURE__*/_jsxs(\"h3\",{children:[\"Number of Tasks: \",tasks.length]}),tasks.length>0?/*#__PURE__*/_jsx(Tasks,{tasks:tasks,onDelete:deleteTask,onEdit:editTask}):'No Task Found!']})});}export default App;","map":{"version":3,"sources":["C:/xampp/htdocs/examples/task-manager-app/src/App.js"],"names":["Header","Tasks","AddTask","useState","useEffect","v4","uuidv4","Swal","App","loading","setloading","tasks","setTasks","showAddTask","setShowAddTask","setTimeout","getTasks","JSON","parse","localStorage","getItem","addTask","task","id","newTask","fire","icon","title","text","setItem","stringify","deleteTask","filter","editTask","prompt","day","data","myData","map","x","window","location","reload","length"],"mappings":"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","sourcesContent":["// Importing Components\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\n// Importing React Hooks\nimport { useState, useEffect } from 'react';\n// Importing Packages\nimport { v4 as uuidv4 } from 'uuid';\nimport Swal from \"sweetalert2\";\nfunction App() {\n    // All States\n    const [loading, setloading] = useState(true); // Pre-loader before page renders\n    const [tasks, setTasks] = useState([]); // Task State\n    const [showAddTask, setShowAddTask] = useState(false); // To reveal add task form\n    // Pre-loader\n    useEffect(() => {\n        setTimeout(() => {\n            setloading(false);\n        }, 1000);\n    }, [])\n    // Fetching from Local Storage\n    const getTasks = JSON.parse(localStorage.getItem(\"taskAdded\"));\n    useEffect(() => {\n        if (getTasks == null) {\n            setTasks([])\n        } else {\n            setTasks(getTasks);\n        }\n    }, [])\n    // Add Task\n    const addTask = (task) => {\n        const id = uuidv4();\n        const newTask = { id, ...task }\n        setTasks([...tasks, newTask]);\n        Swal.fire({\n            icon: 'success',\n            title: 'Yay...',\n            text: 'You have successfully added a new task!'\n        })\n        localStorage.setItem(\"taskAdded\", JSON.stringify([...tasks, newTask]));\n    }\n    // Delete Task\n    const deleteTask = (id) => {\n        const deleteTask = tasks.filter((task) => task.id !== id);\n        setTasks(deleteTask);\n        Swal.fire({\n            icon: 'success',\n            title: 'Oops...',\n            text: 'You have successfully deleted a task!'\n        })\n        localStorage.setItem(\"taskAdded\", JSON.stringify(deleteTask));\n    }\n    // Edit Task\n    const editTask = (id) => {\n        const text = prompt(\"Task Name\");\n        const day = prompt(\"Day and Time\");\n        let data = JSON.parse(localStorage.getItem('taskAdded'));\n        const myData = data.map(x => {\n            if (x.id === id) {\n                return {\n                    ...x,\n                    text: text,\n                    day: day,\n                    id: uuidv4()\n                }\n            }\n            return x;\n        })\n        Swal.fire({\n            icon: 'success',\n            title: 'Yay...',\n            text: 'You have successfully edited an existing task!'\n        })\n        localStorage.setItem(\"taskAdded\", JSON.stringify(myData));\n        window.location.reload();\n    }\n    return (\n        <>\n            {\n                loading ?\n                    <div className=\"spinnerContainer\">\n                        <div className=\"spinner-grow text-primary\" role=\"status\">\n                            <span className=\"visually-hidden\">Loading...</span>\n                        </div>\n                        <div className=\"spinner-grow text-secondary\" role=\"status\">\n                            <span className=\"visually-hidden\">Loading...</span>\n                        </div>\n                        <div className=\"spinner-grow text-success\" role=\"status\">\n                            <span className=\"visually-hidden\">Loading...</span>\n                        </div>\n                        <div className=\"spinner-grow text-danger\" role=\"status\">\n                            <span className=\"visually-hidden\">Loading...</span>\n                        </div>\n                        <div className=\"spinner-grow text-warning\" role=\"status\">\n                            <span className=\"visually-hidden\">Loading...</span>\n                        </div>\n                    </div> :\n                    <div className=\"container\">\n                        {/* App Header that has open and App Name */}\n                        <Header showForm={() => setShowAddTask(!showAddTask)} changeTextAndColor={showAddTask} />\n                        {/* Revealing of Add Task Form */}\n                        {showAddTask && <AddTask onSave={addTask} />}\n                        {/* Task Counter */}\n                        <h3>Number of Tasks: {tasks.length}</h3>\n                        {/* Displaying of Tasks */}\n                        {\n                            tasks.length > 0 ?\n                                (<Tasks tasks={tasks} onDelete={deleteTask} onEdit={editTask} />) :\n                                ('No Task Found!')\n                        }\n                    </div>\n            }\n        </>\n    )\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}