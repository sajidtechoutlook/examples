{"ast":null,"code":"var _jsxFileName = \"c:\\\\xampp\\\\htdocs\\\\react\\\\task-manager-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css'; // Components\n\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask'; // Hooks\n\nimport { useState, useEffect } from 'react'; // Packages\n\nimport { v4 as uuidv4 } from 'uuid';\nimport Swal from \"sweetalert2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst [tasks, setTasks] = useState([]); // Task State\n\nconst [showAddTask, setShowAddTask] = useState(false); // To reveal add task form\n\nuseEffect(() => {\n  alert(\"Welcome to our App\");\n}, []);\n\nfunction App() {\n  _s();\n\n  // All States\n  const [tasks, setTasks] = useState([]); // Task State\n\n  const [showAddTask, setShowAddTask] = useState(false); // To reveal add task form\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        showForm: () => setShowAddTask(!showAddTask),\n        changeTextAndColor: showAddTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n        onSave: addTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 29\n      }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n        tasks: tasks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 18\n      }, this) : 'No Task Found!']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"D+zl6hI2DYh9GIPnzDw1a6QfDC4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["c:/xampp/htdocs/react/task-manager-app/src/App.js"],"names":["Header","Tasks","AddTask","useState","useEffect","v4","uuidv4","Swal","tasks","setTasks","showAddTask","setShowAddTask","alert","App","addTask","length"],"mappings":";;;AAAA,OAAO,WAAP,C,CACA;;AACA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB,C,CACA;;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC,C,CACA;;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,OAAOC,IAAP,MAAiB,aAAjB;;;AAEA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC,C,CAAwC;;AACxC,MAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,KAAD,CAA9C,C,CAAuD;;AAGvDC,SAAS,CAAC,MAAM;AACdQ,EAAAA,KAAK,CAAC,oBAAD,CAAL;AACD,CAFQ,EAEN,EAFM,CAAT;;AAIA,SAASC,GAAT,GAAe;AAAA;;AACb;AACE,QAAM,CAACL,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC,CAFW,CAE6B;;AACxC,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,KAAD,CAA9C,CAHW,CAG4C;;AACvD,sBACI;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BAEE,QAAC,MAAD;AAAQ,QAAA,QAAQ,EAAE,MAAMQ,cAAc,CAAC,CAACD,WAAF,CAAtC;AAAsD,QAAA,kBAAkB,EAAEA;AAA1E;AAAA;AAAA;AAAA;AAAA,cAFF,EAIGA,WAAW,iBAAI,QAAC,OAAD;AAAS,QAAA,MAAM,EAAEI;AAAjB;AAAA;AAAA;AAAA;AAAA,cAJlB,EAQIN,KAAK,CAACO,MAAN,GAAe,CAAf,gBACG,QAAC,KAAD;AAAO,QAAA,KAAK,EAAEP;AAAd;AAAA;AAAA;AAAA;AAAA,cADH,GAEG,gBAVP;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADJ;AAiBH;;GArBQK,G;;KAAAA,G;AAsBT,eAAeA,GAAf","sourcesContent":["import './App.css';\n// Components\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\n// Hooks\nimport { useState, useEffect } from 'react';\n// Packages\nimport { v4 as uuidv4 } from 'uuid';\nimport Swal from \"sweetalert2\";\n\nconst [tasks, setTasks] = useState([]); // Task State\nconst [showAddTask, setShowAddTask] = useState(false); // To reveal add task form\n\n\nuseEffect(() => {\n  alert(\"Welcome to our App\");\n}, []);\n\nfunction App() {\n  // All States\n    const [tasks, setTasks] = useState([]); // Task State\n    const [showAddTask, setShowAddTask] = useState(false); // To reveal add task form\n    return (\n        <>\n          <div className=\"container\">\n            {/* App Header */}\n            <Header showForm={() => setShowAddTask(!showAddTask)} changeTextAndColor={showAddTask} />\n            {/* Revealing the Add Task Form */}\n            {showAddTask && <AddTask onSave={addTask} />}\n            \n            {/* Displaying Tasks */}\n            {\n              tasks.length > 0 ?\n                (<Tasks tasks={tasks} />) :\n                ('No Task Found!')\n            }\n          </div>\n        </>\n    )\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}